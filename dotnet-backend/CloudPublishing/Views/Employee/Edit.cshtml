@using CloudPublishing.Models.Employees.Enums
@model CloudPublishing.Models.Employees.ViewModels.EmployeeEditModel

@{
    ViewBag.Title = "Редактирование сотрудника" + Model.Email;
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div>
        @Html.Raw(ViewBag.Message)
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.FirstName, new { @class = "col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.LastName, new { @class = "col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.MiddleName, new { @class = "col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <fieldset class="">
        <legend>Учетная запись</legend>
        <div class="form-group row">
            @Html.LabelFor(model => model.Email, new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Password, new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <div class="form-group row">
        @Html.LabelFor(model => model.Sex, new { @class = "col-md-2" })
        <div class="col-md-10">
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(model => model.Sex, Sex.M, new { id = "SexM", htmlAttributes = new { @class = "form-check-input"} })
                @Html.Label("Мужской", new { @for = "SexM", @class = "form-check-label" })
            </div>
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(model => model.Sex, Sex.F, new { id = "SexF", htmlAttributes = new { @class = "form-check-input"} })
                @Html.Label("Женский", new { @for = "SexF", @class = "form-check-label" })
            </div>
        </div>
        @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.BirthYear, new { @class = "col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BirthYear, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthYear, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Address, new { @class = "col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Type, new { @class = "col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Type, Model.TypeList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.EducationId, new { @class = "col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.EducationId, Model.EducationList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EducationId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2"></div>
        <div class="form-check col-md-10">
            @Html.EditorFor(model => model.ChiefEditor)
            @Html.LabelFor(model => model.ChiefEditor, new { @class = "form-check-label" })
        </div>
    </div>

    <div class="form-group row justify-content-end">
        <div>
            @Html.ActionLink("Вернуться к списку", "List", null, new { @class = "btn btn-secondary" })
            <button type="submit" class="btn btn-primary">Сохранить</button>
        </div>
    </div>
}
